import net.fabricmc.loom.task.RemapJarTask

plugins {
    id "maven-publish"
    id 'dev.architectury.loom' version '1.6-SNAPSHOT'
}

def isCI = System.getenv("GITHUB_ACTION")
def isRELEASE = System.getenv("GITHUB_RELEASE")

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.layered {
        it.mappings("net.fabricmc:yarn:$project.yarn_mappings:v2")
        it.mappings("dev.architectury:yarn-mappings-patch-neoforge:$project.yarn_mappings_patch_version")
    }
    neoForge "net.neoforged:neoforge:$project.neoforge_version"
    api "org.jetbrains:annotations:19.0.0"
}

java {
    withSourcesJar()
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.mod_version
    }
}

publishing {
    publications {
        mavenJava(org.gradle.api.publish.maven.MavenPublication) {
            //from components.java
            artifact sourcesJar
            artifact(jar){
                classifier = "dev"
            }
            afterEvaluate {
                artifact(remapJar){
                    classifier = null
                }
            }

        }
    }
    repositories {
        if (isCI && isRELEASE) {
            maven {
                url = "https://repo.repsy.io/mvn/trinsdar/trins-mods/"
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        } else {
            mavenLocal()
        }
    }
}
