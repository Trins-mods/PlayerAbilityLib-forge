import net.fabricmc.loom.task.RemapJarTask

import java.time.Year

plugins {
    id "maven-publish"
    id 'dev.architectury.loom' version '1.6-SNAPSHOT'
}

loom {
    forge {
        mixinConfigs = ["mixins.playerabilitylib.common.json"]
    }
}

def isCI = System.getenv("GITHUB_ACTION")
def isRELEASE = System.getenv("GITHUB_RELEASE")
def gitHash() {
    String hash = System.getenv("GITHUB_SHA")
    if (hash != null) return hash.substring(0,8)
    return ""
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    api "org.jetbrains:annotations:19.0.0"
}

java {
    withSourcesJar()
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}

publishing {
    publications {
        mavenJava(org.gradle.api.publish.maven.MavenPublication) {
            //from components.java
            artifact sourcesJar
            artifact(jar){
                classifier = "dev"
            }
            afterEvaluate {
                artifact(remapJar){
                    classifier = null
                }
            }

        }
    }
    repositories {
        if (isCI && isRELEASE) {
            maven {
                url = "https://repo.repsy.io/mvn/trinsdar/trins-mods/"
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        } else {
            mavenLocal()
        }
    }
}
